
*** Broker connectivity testing

hl-client binary can be used to perform basic functionality of the xl4bus
delivery mechanism all together.

hl-client:
- connects to the broker at localhost:9333
- sends N messages to UA "test1"
- listens to incoming messages
- replies to each incoming message

N is 1 by default, but can be controlled by "m" command line argument.

hl-client should be given a certificate that has UA "test1" credential.
hl-client takes in credential material as a "standard" PKI directory label,
  meaning that there must exist ../pki/certs directory, containing
  ca/ca.pem and <label>/private.pem and <label>/cert.pem files,
  and the private key must not be encrypted.

Because of how hl-client is implemented, a simple ping test can be
performed:

- start broker with -p option
- start 1nd instance of hl-client
- start 2nd instance of hl-client

the message generated by first hl-client will disappear as messages
are not delivered to loopback.

the message generated by the second hl-client will be received by the
first hl-client, which will cause it to respond, the response will
be delivered to the second hl-client, which will respond back, and
so on. If broker is running with -p option, it will display message
throughput. With one pair of hl-clients, throughput should be around
20-25 messages/second.

The system can be stressed by increasing amount of messages generated
initially, or adding more hl-client into the conversation.


To run hl-client test, setup as follows:

./buildall.sh

cd pki

# Create CA
./make_ca.sh
Enter CA private key password: pass
Re-enter CA private key password: pass

# Create broker certificate
./make_client.sh
Enter certificate label: broker
Include DMClient privileges [y/N]? <enter>
Include Broker privileges [y/N]? y
Add update agent address [empty to end]: <enter>
Add group name [empty to end]: <enter>
Enter the CA private key password: pass
Sign the certificate? [y/n]:y
1 out of 1 certificate requests certified, commit? [y/n]y

# Create agent certificate
./make_client.sh
Enter certificate label: test1
Include DMClient privileges [y/N]? <enter>
Include Broker privileges [y/N]? <enter>
Add update agent address [empty to end]: test1
Add update agent address [empty to end]: <enter>
Add group name [empty to end]: <enter>
Enter the CA private key password: pass
Sign the certificate? [y/n]:y
1 out of 1 certificate requests certified, commit? [y/n]y

cd ../Release
In 3 shells run the following:
./xl4bus-broker -D broker -p
./hl-client -c test1 -d
./hl-client -c test1 -d


To build for debug with symbols and no optimization:
cd ..
mkdir Debug
cd Debug
cmake -DCMAKE_BUILD_TYPE=Debug ..
make -j
