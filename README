
This is a quick info on building libxl4bus.
Additional documentation is provided for porting.

ALL
===

* Make sure CMake 3.6 or newer is installed.
  (For Ubuntu : https://askubuntu.com/questions/355565)
* Create build directory (e.g. "build"). All artifacts
  will be contained into this build directory
* Make relevant configuration changes (pick your O/S section below).
* Build any submodules (see O/S sections)
* Change into build directory and run "cmake .."
  (Use "cmake -DCMAKE_BUILD_TYPE=Debug .." for debug config)
* Run make to build the libraries, broker and sample clients

LINUX
=====

* Install development packages for:
  - C Ares library (cares)
  - Jansson
  - OpenSSL
* Install autoconf package (autoreconf is needed)
* Initialize submodules:
  - git submodule init
  - git submodule update
* Build json-c:
  - ( rm -rf json-c-build && cp -fr json-c json-c-build && \
         cd json-c-build && autoreconf -f -i && \
         CFLAGS="-fPIC -fvisibility=hidden -Wno-error=implicit-fallthrough" \
         CPPFLAGS="-include $(pwd)/../json-c-rename.h" \
         ./configure --enable-static --disable-shared && make -j )
* Build mbedtls:
  - ( rm -rf mbedtls-build && cp -fr mbedtls mbedtls-build && cd mbedtls-build && \
         ./scripts/config.pl set MBEDTLS_PLATFORM_MEMORY && mkdir -p build && cd build && \
         cmake -DCMAKE_C_FLAGS="-fPIC -fvisibility=hidden" .. && make -j )
* Build cjose:
  - ( rm -rf cjose-build && cp -fr cjose cjose-build && cd cjose-build && \
      CFLAGS="-fPIC -fvisibility=hidden" ./configure --with-openssl=/usr --with-jansson=/usr \
       --enable-static --disable-shared && make -j )

